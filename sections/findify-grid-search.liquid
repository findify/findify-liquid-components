{%- assign page_url = content_for_header | split: '"pageurl":"' | last | split: '"' | first | split: request.host | last | replace: '\/', '/' | replace: '%20', ' ' | replace: '\u0026', '&' | replace: '%7C', '|' | replace: '%27', "'" -%}
{%- assign query_parameters = page_url | split: 'sections=findify-search&' | last -%}{%- assign query_parameters_products = page_url | split: 'sections=findify-products&' | last -%}

{%  comment  %} Recommendation fallback configuration {% endcomment %}
{%- assign recommendation_id = query_parameters | split: 'recommendation_id:' | last | split: '|' | first -%}
{%- assign desktop_slide_per_view = query_parameters | split: 'desktop_slide_per_view:' | last | split: '|' | first | split: '&' | first -%}
{%- assign recommendation_title = query_parameters | split: 'recommendation_title:' | last | split: '&' | first -%}{% include 'findify-grid-connector' %}

{%  comment  %} Content integration configuration {% endcomment %}
{%- assign use_content_integration = query_parameters | split: 'use_content_integration:' | last | split: '&' | first -%}
{% if use_content_integration == 'false' or tabs[0] == 'none' %}
  {%- assign show_content_integration = false -%}
{% else %}
  {%- assign show_content_integration = true -%}
{% endif %}
{% assign findify_filters_component_id = 'findify-filters-sidebar' %}
<div id="findify-search" class="findify-search-section">
  {% if results_count > 0 %}
    <h1 class="findify-heading">{{ 'findify.search.search_results' | t }}</h1>
    {% if show_content_integration %}
      {% render 'findify-content-tabs'
        , tabs: tabs
        , resultsCount: results_count %}
      <div
        id="findify-product-result-content"
        class="findify-tab-content"
        style="display: block;">
    {% endif %}

    <div class="findify-search-container">
      {% render 'findify-toolbar-desktop'
        , results_count: results_count
        , terms: terms
        , sort_options: sort_options
        , default_sort_by: default_sort_by
        , sort_by: sort_by
        , active_filters: active_filters
        , color_layout: color_layout
        , filter_component_id: findify_filters_component_id
      %}
      {% render 'findify-toolbar-mobile'
        , results_count: results_count
        , terms: terms
        , sort_options: sort_options
        , default_sort_by: default_sort_by
        , sort_by: sort_by
        , active_filters: active_filters
        , filter_component_id: findify_filters_component_id
      %}

        <div id="findify-search-main" class="findify-search-main">
        <div class="findify-loader-overlay">
          {% render 'findify-loader' %}
        </div>

        {% render 'findify-filters'
          , component_id: findify_filters_component_id,
          , active_filters: active_filters
          , color_layout: color_layout %}
        <!-- product grid section! -->
        <div class="findify-products-section">
          {% if use_lazy_loading_pagination == 'true' %}
            <div class="findify-lazy-loading-pagination-container">
              {% if curr_page == 1 %}
                {% assign hide_load_prev = true %}
              {% else %}
                {% assign hide_load_prev = false %}
              {% endif %}
              {% render 'findify-button'
                , id: 'findify-pagination-load-previous'
                , text: 'findify.pagination.load_previous'
                , hide: hide_load_prev %}
            </div>
          {% endif %}
          <div id="findify-product-grid" class="findify-product-list">
            {% comment %}
              This element #findify-product-grid will be replaced with rendered html from sections/findify-products
            {% endcomment %}
          </div>
          <div id='findify-pagination'>
            {% comment %}
              This element #findify-pagination will be replaced with rendered html from sections/findify-pagination
            {% endcomment %}
            {% if use_lazy_loading_pagination == 'true' %}
              {% if curr_page < last_page and lazy_loading_pagination_threshold > 0 %}
                {% render 'findify-lazy-loading-pagination'
                  , id: 'findify-grid' %}{% endif %}
              <div class="findify-lazy-loading-pagination-container">
                {% if curr_page < last_page and lazy_loading_pagination_threshold == 0 %}
                  {% assign hide_load_more = false %}
                {% elsif curr_page == last_page %}
                  {% assign hide_load_more = true %}
                {% else %}
                  {% assign hide_load_more = true %}
                {% endif %}
                {% render 'findify-button'
                  , id: 'findify-pagination-load-more'
                  , text: 'findify.pagination.load_more'
                  , hide: hide_load_more %}
              </div>
            {% endif %}
          </div>
        </div>
      </div>
    </div>
    <!-- product grid section! -->

    {% if show_content_integration %}
      </div>
      {% for tab in tabs %}
        {% assign content_id = tab | split: '~' | first %}
        <div id="{{content_id}}-content" class="findify-tab-content">
          {% render 'findify-content-grid'
            , content_id: content_id %}
        </div>
      {% endfor %}
    {% endif %}

  {% else %}
    <div class="findify-zero-result-container">
      <h1>{{ 'findify.search.no_results_for' | t }} "{{ terms | url_decode }}"</h1>
      <h3>{{ 'findify.search.no_results_message' | t }}</h3>
    </div>
    <div id={{ recommendation_id }} class='swiper'></div>
  {% endif %}

  <script>
    if("{{ results_count }}" != "0"){
      if("{{ show_content_integration }}" == 'true') {
        initFindifyTabsEvents();
        initFindifyContentEvents();
      }

      if("{{ use_lazy_loading_pagination }}" == "true") {
        initFindifyLazyLoadingPagination("{{lazy_loading_pagination_threshold}}");
      }

      setFindifyIsLoading(false);
    } else {
      const initRecommendation = async (type) => await findify.recommendation.init({
          recommendation_id: "{{ recommendation_id }}",
          desktop_slide_per_view,
          recommendation_title
        })
        
      findify.core.init.then(() => {
        initRecommendation()
        window.addEventListener("popstate", () => {
          initRecommendation();
        });
      });  
    }

  </script>
</div>


{% schema %}
  {
    "name": "Findify search",
    "tag": "section",
    "class": "section",
    "settings": []
  }
{% endschema %}