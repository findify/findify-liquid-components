{% liquid
  assign value = value | strip_html
  assign filter_element_id = 'findify-filter-' | append: value | replace: ' ', '' | replace: '&amp;', '&'
%}

<div
  id="{{ filter_element_id }}"
  class="findify-filters-checkbox-item {{class}}"
  data-name="{{name}}"
  data-type="{{type}}"
  selected="{{is_selected}}"
  value="{{value}}">
  {% case component %}
    {% when 'reviews' %}
      {% render 'findify-filter-rating-value'
        , is_selected: is_selected
        , value: value
      %}
      <span class=" findify-filter-checkbox-item-count">({{ count }})</span>
    {% when 'color' %}
      {% render 'findify-filter-color-value'
        , is_selected: is_selected
        , color_name: color_name
        , border_color: border_color
        , color_filter_layout: color_filter_layout
      %}
    {% else %}
      {% render 'findify-filter-text-value'
        , is_selected: is_selected
        , has_children: has_children
        , text: text
      %}
      <span class="findify-filter-checkbox-item-count">({{ count }})</span>
  {% endcase %}
</div>

<script>
  const onFilterClick = () => {
    const filter_element_id = "{{ filter_element_id }}"
    let value = "{{ value }}";
    const type = "{{ type }}";
    const name = "{{ name }}";
    const filterElement = document.getElementById(filter_element_id);

    const filterClickHandler = (e) => {
      e.preventDefault();
      e.stopPropagation();
      document.documentElement.classList.remove('no-scroll');
      if (name === 'price') {
        const rate = findify.utils.getShopifyCurrencyRate();
        value = value.replace(/\d+(\.\d+)?/g, (num) =>
          +num ? (+num / rate)?.toFixed(2) : num,
        );
      }
      findify.filters.update({ value, type, name });
    };
    if(filterElement) {
    filterElement.addEventListener("click", filterClickHandler);
    } else {
      console.log('filter_element_id', filter_element_id)
      console.log('value', value)
    }
  };

  onFilterClick();
</script>